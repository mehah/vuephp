/* https://github.com/Raynos/deep-merge */
Vue.util.objectAssignDeep=function(){function getTypeOf(input){if(input===null){return null}else if(typeof input==='undefined'){return undefined}else if(typeof input==='object'){return(Array.isArray(input)?'array':'object')}return typeof input}function cloneValue(value){if(getTypeOf(value)==='object'){return quickCloneObject(value)}else if(getTypeOf(value)==='array'){return quickCloneArray(value)}return value}function quickCloneArray(input){return input.map(cloneValue)}function quickCloneObject(input){var output={};for(var key in input){if(!input.hasOwnProperty(key)){continue}output[key]=cloneValue(input[key])}return output}function executeDeepMerge(target,_objects,_options){_objects=_objects||[];_options=_options||{};var options={arrayBehaviour:_options.arrayBehaviour||'replace',};var objects=_objects.map(function(object){return object||{}});var output=target||{};for(var oindex=0;oindex<objects.length;oindex++){var object=objects[oindex];var keys=Object.keys(object);for(var kindex=0;kindex<keys.length;kindex++){var key=keys[kindex];var value=object[key];var type=getTypeOf(value);var existingValueType=getTypeOf(output[key]);if(type==='object'){if(existingValueType!=='undefined'){var existingValue=(existingValueType==='object'?output[key]:{});output[key]=executeDeepMerge({},[existingValue,quickCloneObject(value)],options)}else{output[key]=quickCloneObject(value)}}else if(type==='array'){if(existingValueType==='array'){var newValue=quickCloneArray(value);output[key]=(options.arrayBehaviour==='merge'?output[key].concat(newValue):newValue)}else{output[key]=quickCloneArray(value)}}else{output[key]=value}}}return output}return function objectAssignDeep(target){return executeDeepMerge(target,Array.prototype.slice.call(arguments,1))}}();
Vue.util.clear=function(t){for(var e in t)if("__ob__"!==e){var o=t[e];o&&("[object Object]"===Object.prototype.toString.call(o)?Vue.util.clear(o):t[e]=null)}};
Vue.util.merge=function(t,e){if(e&&"[object Object]"===Object.prototype.toString.call(e))for(var o in e)"__ob__"!==o&&(t[o]=e[o])};